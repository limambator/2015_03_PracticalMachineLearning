rattle()
install(rattle)
install.packages("rattle")
rattle()
library(rattle)
rattle()
library(rattle)
rattle()
install.packages("data.table")
install.packages("gbm")
install.packages("randomForest")
install.packages("glmnet")
install.packages("parallel")
install.packages("doSNOW")
install.packages("foreach")
install.packages("foreach")
install.packages("foreach")
install.packages("foreach")
install.packages("foreach")
install.packages("foreach")
install.packages("foreach")
install.packages("foreach")
install.packages("foreach")
install.packages("foreach")
install.packages("foreach")
install.packages("Metrics")
install.packages("cvTools")
install.packages("lme4")
install.packages("rlecuyer")
setwd("D:/!Courseria/2015_03 Practical Machine Learning/HW")
load("D:/!Courseria/2015_03 Practical Machine Learning/HW/rfFit_frFit20.RData")
confusionMatrix(testing$classe,predict(rfFit,testing))
library(caret);
confusionMatrix(testing$classe,predict(rfFit,testing))
rfFit
rfFit$finalModel
rfFit_top20$finalModel
rfFit$finalModel
conf_rf <- as.data.frame(confusionMatrix(testing$classe,predict(rfFit_top20,testing))[2])
conf_rf <- conf_rf %>% rename(prediction = table.Prediction, reference = table.Reference, count = table.Freq) %>%
arrange(desc(prediction)) %>% group_by(prediction) %>% mutate(prob = count/sum(count)) %>% ungroup
ggplot(conf_rf, aes(reference, prediction)) +
geom_tile(aes(fill = prob), colour = "white") +
geom_text(aes(fill = prob, label = round(prob, 2)), size=3, colour="grey25") +
scale_fill_gradient(low = "white", high = "red") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), limits = c("E","D","C","B","A"))
conf_rf <- as.data.frame(confusionMatrix(testing$classe,predict(rfFit_top20,testing))[2])
conf_rf <- conf_rf %>% rename(prediction = table.Prediction, reference = table.Reference, count = table.Freq) %>%
arrange(desc(prediction)) %>% group_by(prediction) %>% mutate(prob = count/sum(count)) %>% ungroup
library("dplyr")
library("tidyr")
conf_rf <- conf_rf %>% rename(prediction = table.Prediction, reference = table.Reference, count = table.Freq) %>%
arrange(desc(prediction)) %>% group_by(prediction) %>% mutate(prob = count/sum(count)) %>% ungroup
ggplot(conf_rf, aes(reference, prediction)) +
geom_tile(aes(fill = prob), colour = "white") +
geom_text(aes(fill = prob, label = round(prob, 2)), size=3, colour="grey25") +
scale_fill_gradient(low = "white", high = "red") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0), limits = c("E","D","C","B","A"))
confusionMatrix(testing$classe,predict(rfFit_top20,testing))
